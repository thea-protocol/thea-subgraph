type User @entity {
  id: ID!
  balances: [TheaERC1155Balance!]! @derivedFrom(field: "owner")
}

type TheaERC1155 @entity(immutable: true) {
  id: ID!
  baseURI: String!
  tokens: [Token!]! @derivedFrom(field: "contract")
}

type Token @entity {
  id: ID!
  contract: TheaERC1155!
  tokenURI: String!
  projectId: String!
  vintage: BigInt!
  activeAmount: BigInt!
  mintedAmount: BigInt!
  retiredAmount: BigInt!
  unwrappedAmount: BigInt!
  balances: [TheaERC1155Balance!]! @derivedFrom(field: "token")
  convertEvents: [Converted!]! @derivedFrom(field: "token")
  recoverEvents: [Recovered!]! @derivedFrom(field: "token")
  retireEvents: [Retired!]! @derivedFrom(field: "token")
  unwrapEvents: [Unwraped!]! @derivedFrom(field: "token")
}

type TheaERC1155Balance @entity {
  id: ID!
  token: Token!
  owner: User!
  amount: BigInt!
}

type Converted @entity(immutable: true) {
  id: ID!
  by: User!
  token: Token!
  amount: BigInt!
  timestamp: BigInt!
}

type Recovered @entity(immutable: true) {
  id: ID!
  by: User!
  token: Token!
  amount: BigInt!
  timestamp: BigInt!
}

type Retired @entity(immutable: true) {
  id: ID!
  by: User!
  token: Token!
  amount: BigInt!
  timestamp: BigInt!
}

type Unwraped @entity(immutable: true) {
  id: ID!
  by: User!
  token: Token!
  amount: BigInt!
  timestamp: BigInt!
}
